trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: TerraformInstaller@1
  displayName: 'Install Terraform latest'

# https://github.com/microsoft/azure-pipelines-terraform/tree/main/Tasks/TerraformTask/TerraformTaskV4

- task: TerraformTaskV4@4
  displayName: Terraform Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: terraform
    backendServiceArm: k8sdeploy
    backendAzureRmResourceGroupName: k8sdeploy
    backendAzureRmStorageAccountName: k8sdeploysto
    backendAzureRmContainerName: tfstate
    backendAzureRmKey: state.tfstate

- task: TerraformTaskV4@4
  name: terraformPlan
  displayName: Terraform Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '-out main.tfplan'
    workingDirectory: terraform
    environmentServiceNameAzureRM: 'k8sdeploy'

- task: TerraformTaskV1@0
  displayName: Terraform Apply
  condition: eq(variables['terraformPlan.changesPresent'], 'true')
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: 'main.tfplan'
    workingDirectory: terraform
    environmentServiceNameAzureRM: 'k8sdeploy'